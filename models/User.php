<?php

namespace app\models;

use Yii;
use yii\web\IdentityInterface;

/**
 * This is the model class for table "user".
 *
 * @property integer $id
 * @property string $name
 * @property string $surname
 * @property string $address
 * @property string $email
 * @property string $password
 * @property double $balance
 * @property integer $access
 * @property integer $reg_date
 * @property string $authKey
 * @property string $accessToken
 *
 * @property Order[] $orders
 */
class User extends \yii\db\ActiveRecord implements IdentityInterface
{

    public function beforeSave($insert)
    {
        if(parent::beforeSave($insert))
        {
            if($this->isNewRecord)
            {
                $this->password = \Yii::$app->security->generatePasswordHash($this->password);
            }
            return true;
        }
        return false;
    }

    public static function tableName()
    {
        return 'user';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'surname', 'address', 'email', 'password'], 'required'],
            [['balance'], 'number'],
            [['access', 'reg_date'], 'integer'],
            [['name', 'surname', 'address', 'email', 'password', 'authKey', 'accessToken'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Name',
            'surname' => 'Surname',
            'address' => 'Address',
            'email' => 'Email',
            'password' => 'Password',
            'balance' => 'Balance',
            'access' => 'Access',
            'reg_date' => 'Reg Date',
            'authKey' => 'Auth Key',
            'accessToken' => 'Access Token',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getOrders()
    {
        return $this->hasMany(Order::className(), ['user_id' => 'id']);
    }

    /**
     * @inheritdoc
     * @return UserQuery the active query used by this AR class.
     */

    public static function isAdmin2($id)
    {
        $user = self::findOne($id);
        if($user->access == 1)
        {
            return true;
        }
        return false;
    }

    public static function find()
    {
        return new UserQuery(get_called_class());
    }

    public static function findIdentity($id)
    {
        return static::findOne($id);
    }

    public static function findIdentityByAccessToken($token, $type = null)
    {
        return static::findOne(['access_token' => $token]);
    }

    public static function findByEmail($email)
    {
        return static::findOne(['email' => $email]);
    }

    public function getId()
    {
        return $this->id;
    }

    public function getAuthKey()
    {
        return null;
    }

    public function validatePassword($password)
    {
        return Yii::$app->getSecurity()->validatePassword($password, $this->password);
    }

    public function validateAuthKey($authKey)
    {
        return $this->getAuthKey() === $authKey;


    }

    public function save($runValidation = true, $attributeNames = null)
    {
        $this->reg_date = time();
        return parent::save($runValidation, $attributeNames); // TODO: Change the autogenerated stub
    }
}
